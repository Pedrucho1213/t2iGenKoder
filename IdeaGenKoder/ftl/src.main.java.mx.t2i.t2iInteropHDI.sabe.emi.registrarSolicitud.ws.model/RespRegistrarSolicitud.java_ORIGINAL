package mx.t2i.t2iInteropHDI.sabe.emi.registrarSolicitud.ws.model;

import java.util.ArrayList;
import java.util.List;

import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import mx.t2i.t2iInteropHDI.sabe.emi.registrarSolicitud.biz.model.Agente;
import mx.t2i.t2iInteropHDI.sabe.emi.registrarSolicitud.biz.model.Asegurado;
import mx.t2i.t2iInteropHDI.sabe.emi.registrarSolicitud.biz.model.ConductoCobro;
import mx.t2i.t2iInteropHDI.sabe.emi.registrarSolicitud.biz.model.Contratante;
import mx.t2i.t2iInteropHDI.sabe.emi.registrarSolicitud.biz.model.Endoso;
import mx.t2i.t2iInteropHDI.sabe.emi.registrarSolicitud.biz.model.Poliza;
import mx.t2i.t2iInteropHDI.sabe.emi.registrarSolicitud.biz.model.Recibo;

/**
 * <h4>Description:</h4>
 * Model para interfaz de webservice de RespRegistrarSolicitud
 *
 */
@XmlType(propOrder={
		"respCliente",
		"respPoliza",
					})
@Component
public class RespRegistrarSolicitud extends mx.t2i.tekhne.core.model.BaseInterfaceModel
{
	private static final long serialVersionUID = 1L;

	@Autowired
	private RespCliente respCliente = null;

	@Autowired
	private RespPoliza respPoliza = null;

	/**
    * 
    * Default constructor
    */
    public RespRegistrarSolicitud()
    {
    	super();
    }

    @XmlElement(name="cliente") // Este nombre aparece en el response por cada item
    public RespCliente getRespCliente() {
		return respCliente;
	}

	public void setRespCliente(RespCliente respCliente) {
		this.respCliente = respCliente;
	}

    @XmlElement(name="poliza") // Este nombre aparece en el response por cada item
	public RespPoliza getRespPoliza() {
		return respPoliza;
	}

	public void setRespPoliza(RespPoliza respPoliza) {
		this.respPoliza = respPoliza;
	}

	public void clear()
    {
    }
    
	public String toString()
    {
        StringBuilder r = new StringBuilder() ;

        r
        .append("respCliente=").append( respCliente ).append("&")
        .append("respPoliza=").append( respPoliza ).append("&")

        ;
        return r.toString() ;
    }

    public boolean equals( Object obj )
    {
        boolean r = false;

        if ( obj == null ) return false;
        if ( ! ( obj instanceof RespCliente ) )  return false;

        final RespRegistrarSolicitud other = ( RespRegistrarSolicitud ) obj ;
        final EqualsBuilder equalsBuilder = new EqualsBuilder();

        equalsBuilder.append( this.getClass().getName() , other.getClass().getName() );

        equalsBuilder.append( this.respCliente , other.respCliente );
        equalsBuilder.append( this.respPoliza , other.respPoliza );

        r = equalsBuilder.isEquals() ;
        return r ;
    }

    public int hashCode()
    {
        final HashCodeBuilder hashCodeBuilder = new HashCodeBuilder();

        hashCodeBuilder.append( this.getClass().getName() );

        hashCodeBuilder.append( respCliente );
        hashCodeBuilder.append( respPoliza );

        return hashCodeBuilder.toHashCode() ;
    }

}
